package com.club.web.dao;

import com.club.web.model.SysUserAdmin;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface SysUserAdminMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user_admin
     * @param id  Primary key for table sys_user_admin
     * @return deleteByPrimaryKey
     *
     * @mbggenerated Tue Sep 12 14:44:38 CST 2017
     */
    @Delete({
        "delete from sys_user_admin",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user_admin
     * @param record  Model for table sys_user_admin
     * @return   The last insert key for table sys_user_admin
     *
     * @mbggenerated Tue Sep 12 14:44:38 CST 2017
     */
    @Insert({
        "insert into sys_user_admin (account, user_id, ",
        "user_name, user_real_name, ",
        "sex, customer_type, ",
        "avatar_path, status, ",
        "is_delete, create_time, ",
        "update_time, admin_id, ",
        "admin_name, password)",
        "values (#{account,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, ",
        "#{userName,jdbcType=VARCHAR}, #{userRealName,jdbcType=VARCHAR}, ",
        "#{sex,jdbcType=VARCHAR}, #{customerType,jdbcType=VARCHAR}, ",
        "#{avatarPath,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, ",
        "#{isDelete,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{adminId,jdbcType=INTEGER}, ",
        "#{adminName,jdbcType=VARCHAR}, #{password,jdbcType=VARBINARY})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(SysUserAdmin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user_admin
     * @param record  Model for table sys_user_admin
     * @return   The last insert key for table sys_user_admin
     *
     * @mbggenerated Tue Sep 12 14:44:38 CST 2017
     */
    @InsertProvider(type=SysUserAdminSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(SysUserAdmin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user_admin
     * @param id  Primary key for table sys_user_admin
     * @return   Model for table sys_user_admin
     *
     * @mbggenerated Tue Sep 12 14:44:38 CST 2017
     */
    @Select({
        "select",
        "id, account, user_id, user_name, user_real_name, sex, customer_type, avatar_path, ",
        "status, is_delete, create_time, update_time, admin_id, admin_name,  AES_DECRYPT(password,'eici') password",
        "from sys_user_admin",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="account", property="account", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_real_name", property="userRealName", jdbcType=JdbcType.VARCHAR),
        @Result(column="sex", property="sex", jdbcType=JdbcType.VARCHAR),
        @Result(column="customer_type", property="customerType", jdbcType=JdbcType.VARCHAR),
        @Result(column="avatar_path", property="avatarPath", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_delete", property="isDelete", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="admin_id", property="adminId", jdbcType=JdbcType.INTEGER),
        @Result(column="admin_name", property="adminName", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR)
    })
    SysUserAdmin selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user_admin
     * @param record  Model for table sys_user_admin
     * @return   The last insert key for table sys_user_admin
     *
     * @mbggenerated Tue Sep 12 14:44:38 CST 2017
     */
    @UpdateProvider(type=SysUserAdminSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SysUserAdmin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user_admin
     * @param record  Model for table sys_user_admin
     * @return   The combine SQL for table sys_user_admin
     *
     * @mbggenerated Tue Sep 12 14:44:38 CST 2017
     */
    @Update({
        "update sys_user_admin",
        "set account = #{account,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=INTEGER},",
          "user_name = #{userName,jdbcType=VARCHAR},",
          "user_real_name = #{userRealName,jdbcType=VARCHAR},",
          "sex = #{sex,jdbcType=VARCHAR},",
          "customer_type = #{customerType,jdbcType=VARCHAR},",
          "avatar_path = #{avatarPath,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=VARCHAR},",
          "is_delete = #{isDelete,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "admin_id = #{adminId,jdbcType=INTEGER},",
          "admin_name = #{adminName,jdbcType=VARCHAR},",
          "password = AES_ENCRYPT( #{password,jdbcType=VARCHAR} ,'eici')",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(SysUserAdmin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user_admin
     * @param record  Model for table sys_user_admin
     * @return   The last insert key for table sys_user_admin
     *
     * @mbggenerated Tue Sep 12 14:44:38 CST 2017
     */
    @Update({
        "update sys_user_admin",
        "set account = #{account,jdbcType=VARCHAR},",
        "password = AES_ENCRYPT( #{password,jdbcType=VARCHAR} ,'eici')",
          "user_id = #{userId,jdbcType=INTEGER},",
          "user_name = #{userName,jdbcType=VARCHAR},",
          "user_real_name = #{userRealName,jdbcType=VARCHAR},",
          "sex = #{sex,jdbcType=VARCHAR},",
          "customer_type = #{customerType,jdbcType=VARCHAR},",
          "avatar_path = #{avatarPath,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=VARCHAR},",
          "is_delete = #{isDelete,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "admin_id = #{adminId,jdbcType=INTEGER},",
          "admin_name = #{adminName,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(SysUserAdmin record);
    

    @SelectProvider(type=SysUserAdminSqlProvider.class, method="getUserAdminByAP")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="account", property="account", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_real_name", property="userRealName", jdbcType=JdbcType.VARCHAR),
        @Result(column="sex", property="sex", jdbcType=JdbcType.VARCHAR),
        @Result(column="customer_type", property="customerType", jdbcType=JdbcType.VARCHAR),
        @Result(column="avatar_path", property="avatarPath", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_delete", property="isDelete", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="admin_id", property="adminId", jdbcType=JdbcType.INTEGER),
        @Result(column="admin_name", property="adminName", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR)
    })
    SysUserAdmin getUserAdminByAP(SysUserAdmin admin);
    
    
    @SelectProvider(type=SysUserAdminSqlProvider.class, method="getAdminByAP")
    @Results({
    	@Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
    	@Result(column="account", property="account", jdbcType=JdbcType.VARCHAR),
    	@Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
    	@Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
    	@Result(column="user_real_name", property="userRealName", jdbcType=JdbcType.VARCHAR),
    	@Result(column="sex", property="sex", jdbcType=JdbcType.VARCHAR),
    	@Result(column="customer_type", property="customerType", jdbcType=JdbcType.VARCHAR),
    	@Result(column="avatar_path", property="avatarPath", jdbcType=JdbcType.VARCHAR),
    	@Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
    	@Result(column="is_delete", property="isDelete", jdbcType=JdbcType.VARCHAR),
    	@Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
    	@Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
    	@Result(column="admin_id", property="adminId", jdbcType=JdbcType.INTEGER),
    	@Result(column="admin_name", property="adminName", jdbcType=JdbcType.VARCHAR),
    	@Result(column="password", property="password", jdbcType=JdbcType.VARCHAR)
    })
    SysUserAdmin getAdminByAP(SysUserAdmin admin);
}